(defpoll getgpu :interval "1s" "scripts/getgpu || echo 0")

(defwidget cpustuff []
    (box
        :class "stuff cpustuff"
        :orientation "v"
        :space-evenly false
        :halign "start"
        ;;(metric :label "CPU" :value {EWW_CPU.avg} :onchange "")
        (metric :label "CPU1" :value {EWW_CPU.cores[0].usage} :class "CPU1" )
        (metric :label "CPU2" :value {EWW_CPU.cores[1].usage} :class "CPU2" )
        (metric :label "CPU3" :value {EWW_CPU.cores[2].usage} :class "CPU3" )
        (metric :label "CPU4" :value {EWW_CPU.cores[3].usage} :class "CPU4" )
        (metric :label "CPU5" :value {EWW_CPU.cores[4].usage} :class "CPU5" )
        (metric :label "CPU6" :value {EWW_CPU.cores[5].usage} :class "CPU6" )
        (metric :label "CPU7" :value {EWW_CPU.cores[6].usage} :class "CPU7" )
        (metric :label "CPU8" :value {EWW_CPU.cores[7].usage} :class "CPU8" )
        (metric :label "RAM " :value {EWW_RAM.used_mem_perc}  :class "RAM"  )
        (metric :label "GPU " :value getgpu                   :class "GPU"  )
    )
)

(defwidget metric [label value ?onchange class]
    (box :orientation "h"
       :class "metric"
       :space-evenly false

        (box :class "label" label)
        (scale
           :class "${class}"
           :orientation "h"
           :value value
       )
    )
)
